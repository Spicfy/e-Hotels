{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Justin%27s%20study%20place/University%20of%20ottawa/2025%E6%98%A5/CSI2132%20Databases%20I/project/e-Hotels/src/app/api/auth/nextauth/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport { PrismaClient } from \"@prisma/client\";\r\nimport bcrypt from 'bcryptjs';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\n// 明确定义并导出 authOptions\r\nexport const authOptions = {\r\n    providers: [\r\n        CredentialsProvider({\r\n            name: \"Credentials\",\r\n            credentials: {\r\n                email: { label: \"Email\", type: \"email\" },\r\n                password: { label: \"Password\", type: \"password\" }\r\n            },\r\n            async authorize(credentials) {\r\n                if (!credentials) return null;\r\n\r\n                const user = await prisma.user.findUnique({ where: { email: credentials.email } });\r\n                if (!user) throw new Error(\"用户不存在\");\r\n\r\n                const isValid = await bcrypt.compare(credentials.password, user.password);\r\n                if (!isValid) throw new Error(\"密码错误\");\r\n\r\n                return { id: user.id, name: user.name, email: user.email };\r\n            }\r\n        })\r\n    ],\r\n    session: { strategy: \"jwt\" },\r\n    secret: process.env.NEXTAUTH_SECRET\r\n};\r\n\r\n// 使用NextAuth处理请求\r\nconst handler = NextAuth(authOptions);\r\n\r\nexport { handler as GET, handler as POST };\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAGxB,MAAM,cAAc;IACvB,WAAW;QACP,CAAA,GAAA,wJAAA,CAAA,UAAmB,AAAD,EAAE;YAChB,MAAM;YACN,aAAa;gBACT,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YACpD;YACA,MAAM,WAAU,WAAW;gBACvB,IAAI,CAAC,aAAa,OAAO;gBAEzB,MAAM,OAAO,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC;oBAAE,OAAO;wBAAE,OAAO,YAAY,KAAK;oBAAC;gBAAE;gBAChF,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;gBAE3B,MAAM,UAAU,MAAM,iIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,YAAY,QAAQ,EAAE,KAAK,QAAQ;gBACxE,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;gBAE9B,OAAO;oBAAE,IAAI,KAAK,EAAE;oBAAE,MAAM,KAAK,IAAI;oBAAE,OAAO,KAAK,KAAK;gBAAC;YAC7D;QACJ;KACH;IACD,SAAS;QAAE,UAAU;IAAM;IAC3B,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACvC;AAEA,iBAAiB;AACjB,MAAM,UAAU,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Justin%27s%20study%20place/University%20of%20ottawa/2025%E6%98%A5/CSI2132%20Databases%20I/project/e-Hotels/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"./api/auth/nextauth/route\";\nimport { SessionProvider } from \"./components/SessionProvider\"; // 自定义包装的Client组件\n\nconst geistSans = Geist({\n    variable: \"--font-geist-sans\",\n    subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n    variable: \"--font-geist-mono\",\n    subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n    title: \"Create Next App\",\n    description: \"Generated by create next app\",\n};\n\nexport default async function RootLayout({\n                                             children,\n                                         }: Readonly<{\n    children: React.ReactNode;\n}>) {\n    const session = await getServerSession(authOptions);\n\n    return (\n        <html lang=\"en\">\n        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>\n        <SessionProvider session={session}>\n            {children}\n        </SessionProvider>\n        </body>\n        </html>\n    );\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;;;;;;;;;;;;;AAaO,MAAM,WAAqB;IAC9B,OAAO;IACP,aAAa;AACjB;AAEe,eAAe,WAAW,EACI,QAAQ,EAGnD;IACE,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,8IAAA,CAAA,cAAW;IAElD,qBACI,8OAAC;QAAK,MAAK;kBACX,cAAA,8OAAC;YAAK,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAC1E,cAAA,8OAAC;gBAAgB,SAAS;0BACrB;;;;;;;;;;;;;;;;AAKb","debugId":null}}]
}