generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())

  bookings  Booking[]
  reviews   Review[]
}

model HotelChain {
  id             Int      @id @default(autoincrement())
  name           String
  officeAddress  String
  numHotels      Int      @default(0)
  email          String?
  phone          String?

  hotels         Hotel[]
}

model Hotel {
  id             Int      @id @default(autoincrement())
  name           String
  stars          Int      @default(3)
  address        String?
  contactEmail   String?
  contactPhone   String?

  chainId        Int
  chain          HotelChain @relation(fields: [chainId], references: [id], onDelete: Cascade)

  rooms          Room[]
  reviews        Review[]
}

model Room {
  id           Int       @id @default(autoincrement())
  hotelId      Int
  hotel        Hotel     @relation(fields: [hotelId], references: [id], onDelete: Cascade)

  price        Decimal   @db.Decimal(10, 2)
  capacity     Int
  seaView      Boolean   @default(false)
  extendable   Boolean   @default(false)
  damages      String?
  roomNumber   String    @unique

  amenities    Amenity[]
  bookings     Booking[]
}

model Amenity {
  id        Int    @id @default(autoincrement())
  name      String
  roomId    Int
  room      Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model Booking {
  id        Int      @id @default(autoincrement())
  userId    String
  roomId    Int
  startDate DateTime
  endDate   DateTime

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    String
  hotelId   Int
  rating    Int      @default(5)
  comment   String?
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  hotel     Hotel    @relation(fields: [hotelId], references: [id], onDelete: Cascade)
}
